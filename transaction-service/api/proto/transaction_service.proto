syntax = "proto3";

package transaction;

import "tx_common/common.proto";
import "tx_common/health_check.proto";

option go_package = "protogen/txservice/proto";

import "google/protobuf/timestamp.proto";

service TransactionService {
  // HealthCheck sends the health status of the account service
  rpc HealthCheck(tx_common.HealthCheckRequest) returns (tx_common.HealthCheckResponse);

  /*
  Transaction Management
 */
  // InitTransaction processes transactions between accounts:
  // type=transfer -> transfer between accounts;
  // type=withdraw_full -> removes all amount from the source account
  // type=withdraw_amount -> withdraws specific amount from the source account
  // type=add_amount -> adds specific amount from the source account
  rpc InitTransaction(InitTransactionRequest) returns (InitTransactionResponse);

  // GetTransactionHistory returns a paginated list of transaction records
  rpc GetTransactionHistory(GetTransactionHistoryRequest) returns (GetTransactionHistoryResponse);
}

message Transaction {
  string id = 1;
  string source_account_id = 2;
  string destination_account_id = 3;
  double amount = 4;
  string type = 5;
  string transaction_status = 6;
  string reference = 7;
  google.protobuf.Timestamp created_at = 8;
  google.protobuf.Timestamp updated_at = 9;
  string created_by = 10;
  string error_reason = 11;
  int32 retry_count = 12;
  google.protobuf.Timestamp last_retry_at = 13;
  google.protobuf.Timestamp timeout_at = 14;
  int32 version = 15;
}

message InitTransactionRequest {
  string source_account_id = 1;
  string destination_account_id = 2;
  double amount = 3;
  string type = 4;
  string reference = 5;
  tx_common.Metadata metadata = 7;
}

message InitTransactionResponse {
  string transaction_id = 1;
  string transaction_status = 2;
  tx_common.Response response = 3;
}

message GetTransactionHistoryRequest {
  string account_id = 1;
  string customer_id = 2;
  google.protobuf.Timestamp start_date = 3;
  google.protobuf.Timestamp end_date = 4;
  string sort_order = 5;
  tx_common.PaginationRequest pagination = 6;
  tx_common.Metadata metadata = 7;
  string types = 8;
}

message GetTransactionHistoryResponse {
  repeated Transaction transactions = 1;
  tx_common.PaginationResponse pagination = 2;
  tx_common.Response response = 3;
}